{"ast":null,"code":"var _jsxFileName = \"/home/marcelocaixeta/Dev/Trade/bitcoin-app/src/PointerChart.js\";\nimport Highcharts from 'highcharts';\nimport getServiceFearAndGreed from './ServiceFearAndGreed';\nimport HighchartsReact from 'highcharts-react-official';\nimport HighchartsMore from 'highcharts/highcharts-more';\n\n// Função para traduzir as classificações\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst translateClassification = classification => {\n  const translations = {\n    'Extreme Fear': 'Comprar muito',\n    'Fear': 'Comprar um pouco',\n    'Neutral': 'Juntar Dólares',\n    'Greed': 'Vender um pouco',\n    'Extreme Greed': 'Vender muito'\n  };\n  return translations[classification] || classification;\n};\nconst classifyByValue = value => {\n  if (value >= 0 && value <= 24) {\n    return 'Comprar muito';\n  } else if (value >= 25 && value <= 44) {\n    return 'Comprar um pouco';\n  } else if (value >= 45 && value <= 54) {\n    return 'Juntar Dólares';\n  } else if (value >= 55 && value <= 74) {\n    return 'Vender um pouco';\n  } else if (value >= 75 && value <= 100) {\n    return 'Vender muito';\n  } else {\n    return 'Valor fora do intervalo';\n  }\n};\nconst val = await getServiceFearAndGreed(1);\nconst ontem = await getServiceFearAndGreed(2);\nconst semana = await getServiceFearAndGreed(7);\nconst mes = await getServiceFearAndGreed(30);\nconst valor = parseInt(val[0][0]);\nconst classificacao = translateClassification(val[2][0]);\nHighchartsMore(Highcharts);\nconst options = {\n  chart: {\n    type: 'gauge',\n    backgroundColor: '#282c34',\n    // Define o fundo preto\n    plotBackgroundColor: null,\n    plotBackgroundImage: null,\n    plotBorderWidth: 0,\n    plotShadow: false,\n    height: '80%'\n  },\n  title: {\n    text: 'Indicador de Compra e Venda de Bitcoin',\n    style: {\n      color: '#FFFFFF' // Define a cor do texto para branco\n    }\n  },\n  pane: {\n    startAngle: -90,\n    endAngle: 89.9,\n    background: null,\n    center: ['50%', '75%'],\n    size: '110%'\n  },\n  yAxis: {\n    min: 0,\n    max: 100,\n    tickPixelInterval: 72,\n    tickPosition: 'inside',\n    tickColor: '#282c34',\n    // Define a cor dos ticks para cor do fundo\n    tickLength: 20,\n    tickWidth: 2,\n    minorTickInterval: null,\n    labels: {\n      distance: 20,\n      style: {\n        fontSize: '14px',\n        color: '#FFFFFF' // Define a cor das labels para branco\n      }\n    },\n    lineWidth: 0,\n    plotBands: [{\n      from: 0,\n      to: 25,\n      color: 'green',\n      // verde escuro\n      thickness: 20\n    }, {\n      from: 25,\n      to: 44.99,\n      color: '#55BF3B',\n      // verde\n      thickness: 20\n    }, {\n      from: 45,\n      to: 54.99,\n      color: '#DDDF0D',\n      // amarelo\n      thickness: 20\n    }, {\n      from: 55,\n      to: 74.99,\n      color: '#DF5353',\n      // vermelho\n      thickness: 20\n    }, {\n      from: 75,\n      to: 100,\n      color: 'red',\n      // vermelho escuro\n      thickness: 20\n    }]\n  },\n  series: [{\n    name: 'Classificação',\n    data: [valor],\n    tooltip: {\n      valueSuffix: ' ' + classificacao,\n      backgroundColor: '#333333',\n      // Define o fundo do tooltip para cinza escuro\n      style: {\n        color: '#FFFFFF' // Define a cor do texto do tooltip para branco\n      }\n    },\n    dataLabels: {\n      format: '{y} ' + classificacao,\n      borderWidth: 0,\n      color: '#FFFFFF',\n      // Define a cor do texto para branco\n      style: {\n        fontSize: '16px'\n      }\n    },\n    dial: {\n      radius: '80%',\n      backgroundColor: '#CCCCCC',\n      // Define a cor do ponteiro para branco\n      baseWidth: 12,\n      baseLength: '0%',\n      rearLength: '0%'\n    },\n    pivot: {\n      backgroundColor: '#FFFFFF',\n      // Define a cor do pivô para branco\n      radius: 6\n    }\n  }]\n};\nconst PointerChart = () => {\n  // Função para determinar a cor com base no valor\n  function getColorForValue(value) {\n    const band = options['yAxis']['plotBands'].find(band => value >= band.from && value <= band.to);\n    return band ? band.color : null;\n  }\n  const valuesSemana = semana[0];\n  const valuesMes = mes[0];\n  const averageSemana = Math.round(valuesSemana.map(Number).reduce((acc, val) => acc + val, 0) / valuesSemana.length);\n  const averageMes = Math.round(valuesMes.map(Number).reduce((acc, val) => acc + val, 0) / valuesMes.length);\n\n  // Traduzir a classificação média\n  const rangeSemana = classifyByValue(averageSemana);\n  const rangeMes = classifyByValue(averageMes);\n  const data = [{\n    phase: 'Ontem',\n    range: translateClassification(ontem[2][0]),\n    color: getColorForValue(ontem[0][0]),\n    value: ontem[0][0]\n  }, {\n    phase: '7 Dias',\n    range: rangeSemana,\n    color: getColorForValue(averageSemana),\n    value: averageSemana\n  }, {\n    phase: '30 Dias',\n    range: rangeMes,\n    color: getColorForValue(averageMes),\n    value: averageMes\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse',\n          color: '#FFFFFF',\n          backgroundColor: '#282c34'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [data.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #FFFFFF',\n                padding: '8px'\n              },\n              children: item.phase\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #FFFFFF',\n                padding: '8px'\n              },\n              children: item.range\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #FFFFFF',\n                padding: '8px',\n                backgroundColor: item.color\n              },\n              children: [item.value, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #FFFFFF',\n                padding: '8px'\n              },\n              colSpan: 3,\n              children: [\"Atualiza em \", val[3]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 7\n  }, this);\n};\n_c = PointerChart;\nexport default PointerChart;\nvar _c;\n$RefreshReg$(_c, \"PointerChart\");","map":{"version":3,"names":["Highcharts","getServiceFearAndGreed","HighchartsReact","HighchartsMore","jsxDEV","_jsxDEV","translateClassification","classification","translations","classifyByValue","value","val","ontem","semana","mes","valor","parseInt","classificacao","options","chart","type","backgroundColor","plotBackgroundColor","plotBackgroundImage","plotBorderWidth","plotShadow","height","title","text","style","color","pane","startAngle","endAngle","background","center","size","yAxis","min","max","tickPixelInterval","tickPosition","tickColor","tickLength","tickWidth","minorTickInterval","labels","distance","fontSize","lineWidth","plotBands","from","to","thickness","series","name","data","tooltip","valueSuffix","dataLabels","format","borderWidth","dial","radius","baseWidth","baseLength","rearLength","pivot","PointerChart","getColorForValue","band","find","valuesSemana","valuesMes","averageSemana","Math","round","map","Number","reduce","acc","length","averageMes","rangeSemana","rangeMes","phase","range","children","highcharts","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","width","borderCollapse","item","index","border","padding","colSpan","_c","$RefreshReg$"],"sources":["/home/marcelocaixeta/Dev/Trade/bitcoin-app/src/PointerChart.js"],"sourcesContent":["import Highcharts from 'highcharts';\nimport getServiceFearAndGreed from './ServiceFearAndGreed';\nimport HighchartsReact from 'highcharts-react-official';\nimport HighchartsMore from 'highcharts/highcharts-more';\n\n// Função para traduzir as classificações\nconst translateClassification = (classification) => {\n    const translations = {\n        'Extreme Fear': 'Comprar muito',\n        'Fear': 'Comprar um pouco',\n        'Neutral': 'Juntar Dólares',\n        'Greed': 'Vender um pouco',\n        'Extreme Greed': 'Vender muito'\n    };\n\n    return translations[classification] || classification;\n};\n\nconst classifyByValue = (value) => {\n  if (value >= 0 && value <= 24) {\n      return 'Comprar muito';\n  } else if (value >= 25 && value <= 44) {\n      return 'Comprar um pouco';\n  } else if (value >= 45 && value <= 54) {\n      return 'Juntar Dólares';\n  } else if (value >= 55 && value <= 74) {\n      return 'Vender um pouco';\n  } else if (value >= 75 && value <= 100) {\n      return 'Vender muito';\n  } else {\n      return 'Valor fora do intervalo';\n  }\n};\n\nconst val = await getServiceFearAndGreed(1);\nconst ontem = await getServiceFearAndGreed(2);\nconst semana = await getServiceFearAndGreed(7);\nconst mes = await getServiceFearAndGreed(30);\nconst valor = parseInt(val[0][0]);\nconst classificacao = translateClassification(val[2][0]);\n\nHighchartsMore(Highcharts);\n\nconst options = {\n\n    chart: {\n        type: 'gauge',\n        backgroundColor: '#282c34', // Define o fundo preto\n        plotBackgroundColor: null,\n        plotBackgroundImage: null,\n        plotBorderWidth: 0,\n        plotShadow: false,\n        height: '80%'\n    },\n\n    title: {\n        text: 'Indicador de Compra e Venda de Bitcoin',\n        style: {\n            color: '#FFFFFF' // Define a cor do texto para branco\n        }\n    },\n\n    pane: {\n        startAngle: -90,\n        endAngle: 89.9,\n        background: null,\n        center: ['50%', '75%'],\n        size: '110%'\n    },\n\n    yAxis: {\n        min: 0,\n        max: 100,\n        tickPixelInterval: 72,\n        tickPosition: 'inside',\n        tickColor: '#282c34', // Define a cor dos ticks para cor do fundo\n        tickLength: 20,\n        tickWidth: 2,\n        minorTickInterval: null,\n        labels: {\n            distance: 20,\n            style: {\n                fontSize: '14px',\n                color: '#FFFFFF' // Define a cor das labels para branco\n            }\n        },\n        lineWidth: 0,\n        plotBands: [\n            {\n                from: 0,\n                to: 25,\n                color: 'green', // verde escuro\n                thickness: 20,\n            }, {\n                from: 25,\n                to: 44.99,\n                color: '#55BF3B', // verde\n                thickness: 20,\n            }, {\n                from: 45,\n                to: 54.99,\n                color: '#DDDF0D', // amarelo\n                thickness: 20\n            }, {\n                from: 55,\n                to: 74.99,\n                color: '#DF5353', // vermelho\n                thickness: 20\n            }, {\n                from: 75,\n                to: 100,\n                color: 'red', // vermelho escuro\n                thickness: 20\n            }\n        ]\n    },\n    series: [{\n        name: 'Classificação',\n        data: [valor],\n        tooltip: {\n            valueSuffix: ' ' + classificacao,\n            backgroundColor: '#333333', // Define o fundo do tooltip para cinza escuro\n            style: {\n                color: '#FFFFFF' // Define a cor do texto do tooltip para branco\n            }\n        },\n        dataLabels: {\n            format: '{y} ' + classificacao,\n            borderWidth: 0,\n            color: '#FFFFFF', // Define a cor do texto para branco\n            style: {\n                fontSize: '16px'\n            }\n        },\n        dial: {\n            radius: '80%',\n            backgroundColor: '#CCCCCC', // Define a cor do ponteiro para branco\n            baseWidth: 12,\n            baseLength: '0%',\n            rearLength: '0%'\n        },\n        pivot: {\n            backgroundColor: '#FFFFFF', // Define a cor do pivô para branco\n            radius: 6\n        }\n\n    }]\n};\n\nconst PointerChart = () => {\n\n     // Função para determinar a cor com base no valor\n    function getColorForValue(value) {\n        const band = options['yAxis']['plotBands'].find(band => value >= band.from && value <= band.to);\n        return band ? band.color : null;\n    }\n    \n    const valuesSemana = semana[0];\n    const valuesMes = mes[0];\n    const averageSemana = Math.round(valuesSemana.map(Number).reduce((acc, val) => acc + val, 0) / valuesSemana.length);\n    const averageMes = Math.round(valuesMes.map(Number).reduce((acc, val) => acc + val, 0) / valuesMes.length);\n\n    // Traduzir a classificação média\n    const rangeSemana = classifyByValue(averageSemana);\n    const rangeMes = classifyByValue(averageMes);\n\n    const data = [\n      { phase: 'Ontem', range: translateClassification(ontem[2][0]), color: getColorForValue(ontem[0][0]), value: ontem[0][0] },\n      { phase: '7 Dias', range: rangeSemana, color: getColorForValue(averageSemana), value: averageSemana },\n      { phase: '30 Dias', range: rangeMes, color: getColorForValue(averageMes), value: averageMes }\n    ];\n\n    return (\n      <div>\n        <HighchartsReact\n          highcharts={Highcharts}\n          options={options}\n        />\n        <div style={{ marginTop: '1%' }}>\n          <table style={{ width: '100%', borderCollapse: 'collapse', color: '#FFFFFF', backgroundColor: '#282c34' }}>\n            <thead>\n              <tr>\n            \n              </tr>\n            </thead>\n            <tbody>\n              {data.map((item, index) => (\n                <tr key={index}>\n                  <td style={{ border: '1px solid #FFFFFF', padding: '8px' }}>{item.phase}</td>\n                  <td style={{ border: '1px solid #FFFFFF', padding: '8px' }}>{item.range}</td>\n                  <td style={{ border: '1px solid #FFFFFF', padding: '8px', backgroundColor: item.color }}>{item.value} </td>\n                </tr>\n              ))}\n                <tr>\n                  <td style={{ border: '1px solid #FFFFFF', padding: '8px' }} colSpan={3}>Atualiza em {val[3]}</td>\n                </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  };\n  \n  export default PointerChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}