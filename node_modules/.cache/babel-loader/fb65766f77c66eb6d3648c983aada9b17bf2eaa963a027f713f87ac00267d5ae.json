{"ast":null,"code":"import axios from'axios';import{format,formatDuration,intervalToDuration,addDays}from'date-fns';import{ptBR}from'date-fns/locale';export default async function getServiceFearAndGreed(limit){const formatTimeUntilUpdate=seconds=>{const duration=intervalToDuration({start:0,end:seconds*1000});return formatDuration(duration,{format:['hours','minutes'],locale:ptBR});};try{const response=await axios.get('https://api.alternative.me/fng/?limit='+limit);// Aguarda a resposta da API\nconst sortedData=response.data.data.sort((a,b)=>a.timestamp-b.timestamp);const resultArray=[sortedData.map(item=>item.value),sortedData.map(item=>{const newDate=addDays(new Date(item.timestamp*1000),1);return format(newDate,'dd/MM');}),sortedData.map(item=>item.value_classification),sortedData.map(item=>item.time_until_update?formatTimeUntilUpdate(item.time_until_update):'N/A')];return resultArray;}catch(error){console.error('Erro ao buscar os dados:',error);return[[],[],[]];}}","map":{"version":3,"names":["axios","format","formatDuration","intervalToDuration","addDays","ptBR","getServiceFearAndGreed","limit","formatTimeUntilUpdate","seconds","duration","start","end","locale","response","get","sortedData","data","sort","a","b","timestamp","resultArray","map","item","value","newDate","Date","value_classification","time_until_update","error","console"],"sources":["/home/marcelocaixeta/Dev/Trade/bitcoin-app/src/ServiceFearAndGreed.js"],"sourcesContent":["import axios from 'axios';\nimport { format, formatDuration, intervalToDuration, addDays} from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\n\nexport default async function getServiceFearAndGreed(limit) {\n\n  const formatTimeUntilUpdate = (seconds) => {\n    const duration = intervalToDuration({ start: 0, end: seconds * 1000 });\n    return formatDuration(duration, {\n        format: ['hours', 'minutes'],\n        locale: ptBR\n    });\n  };\n\n  try {\n    const response = await axios.get('https://api.alternative.me/fng/?limit=' + limit); // Aguarda a resposta da API\n    const sortedData = response.data.data.sort((a, b) => a.timestamp - b.timestamp);\n    const resultArray = [\n      sortedData.map(item => item.value),\n      sortedData.map(item => {\n        const newDate = addDays(new Date(item.timestamp * 1000), 1);\n        return format(newDate, 'dd/MM');\n      }),\n      sortedData.map(item => item.value_classification),\n      sortedData.map(item => item.time_until_update ? formatTimeUntilUpdate(item.time_until_update) : 'N/A')\n    ];\n    return resultArray;\n  } catch (error) {\n    console.error('Erro ao buscar os dados:', error);\n    return [[], [], []];\n  }\n} \n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,MAAM,CAAEC,cAAc,CAAEC,kBAAkB,CAAEC,OAAO,KAAO,UAAU,CAC7E,OAASC,IAAI,KAAQ,iBAAiB,CAEtC,cAAe,eAAe,CAAAC,sBAAsBA,CAACC,KAAK,CAAE,CAE1D,KAAM,CAAAC,qBAAqB,CAAIC,OAAO,EAAK,CACzC,KAAM,CAAAC,QAAQ,CAAGP,kBAAkB,CAAC,CAAEQ,KAAK,CAAE,CAAC,CAAEC,GAAG,CAAEH,OAAO,CAAG,IAAK,CAAC,CAAC,CACtE,MAAO,CAAAP,cAAc,CAACQ,QAAQ,CAAE,CAC5BT,MAAM,CAAE,CAAC,OAAO,CAAE,SAAS,CAAC,CAC5BY,MAAM,CAAER,IACZ,CAAC,CAAC,CACJ,CAAC,CAED,GAAI,CACF,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAAd,KAAK,CAACe,GAAG,CAAC,wCAAwC,CAAGR,KAAK,CAAC,CAAE;AACpF,KAAM,CAAAS,UAAU,CAAGF,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACC,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAACE,SAAS,CAAGD,CAAC,CAACC,SAAS,CAAC,CAC/E,KAAM,CAAAC,WAAW,CAAG,CAClBN,UAAU,CAACO,GAAG,CAACC,IAAI,EAAIA,IAAI,CAACC,KAAK,CAAC,CAClCT,UAAU,CAACO,GAAG,CAACC,IAAI,EAAI,CACrB,KAAM,CAAAE,OAAO,CAAGtB,OAAO,CAAC,GAAI,CAAAuB,IAAI,CAACH,IAAI,CAACH,SAAS,CAAG,IAAI,CAAC,CAAE,CAAC,CAAC,CAC3D,MAAO,CAAApB,MAAM,CAACyB,OAAO,CAAE,OAAO,CAAC,CACjC,CAAC,CAAC,CACFV,UAAU,CAACO,GAAG,CAACC,IAAI,EAAIA,IAAI,CAACI,oBAAoB,CAAC,CACjDZ,UAAU,CAACO,GAAG,CAACC,IAAI,EAAIA,IAAI,CAACK,iBAAiB,CAAGrB,qBAAqB,CAACgB,IAAI,CAACK,iBAAiB,CAAC,CAAG,KAAK,CAAC,CACvG,CACD,MAAO,CAAAP,WAAW,CACpB,CAAE,MAAOQ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,MAAO,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CACrB,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}