{"ast":null,"code":"var _jsxFileName = \"/home/marcelocaixeta/Dev/Trade/bitcoin-app/src/FearAndGreedChartLine.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport getServiceFearAndGreed from './ServiceFearAndGreed';\nimport getBitcoinPriceData from './ServiceBitcoinPrice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dataFag = await getServiceFearAndGreed(30);\nconst dataBtc = await getBitcoinPriceData(30);\nconst ChartLineDouble = ({\n  bitcoinPrices,\n  fearAndGreedIndex,\n  labels\n}) => {\n  const data = {\n    labels: dataFag[1],\n    datasets: [{\n      type: 'line',\n      label: 'Preço do Bitcoin (BTC)',\n      data: dataBtc.slice(-30),\n      // Valores do preço do Bitcoin\n      borderColor: 'rgb(255, 215, 0)',\n      // Cor amarela para o preço do Bitcoin\n      backgroundColor: 'rgba(255, 215, 0, 0.2)',\n      yAxisID: 'y1' // Associa este dataset ao eixo y1\n    }, {\n      type: 'line',\n      label: 'Fear and Greed Index (FGI)',\n      data: dataFag[0],\n      // Valores do Fear and Greed Index\n      fill: false,\n      borderColor: 'rgb(54, 162, 235)',\n      // Cor azul para o índice\n      yAxisID: 'y2' // Associa este dataset ao eixo y2\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        ticks: {\n          color: '#FFFFFF'\n        },\n        // Cor do texto do eixo X\n        grid: {\n          color: 'rgba(255, 255, 255, 0.2)'\n        } // Cor da grade do eixo X\n      },\n      y1: {\n        type: 'linear',\n        position: 'left',\n        ticks: {\n          color: '#FFD700'\n        },\n        // Cor do texto do eixo Y1\n        grid: {\n          color: 'rgba(255, 215, 0, 0.2)'\n        },\n        // Cor da grade do eixo Y1\n        beginAtZero: false // Para ajustar a escala ao valor mínimo do BTC\n      },\n      y2: {\n        type: 'linear',\n        position: 'right',\n        ticks: {\n          color: '#36A2EB'\n        },\n        // Cor do texto do eixo Y2\n        grid: {\n          drawOnChartArea: false\n        },\n        // Evita sobreposição de grids\n        beginAtZero: true // Mantém o índice começando em 0\n      }\n    },\n    plugins: {\n      legend: {\n        labels: {\n          color: '#FFFFFF'\n        } // Cor do texto da legenda\n      }\n    },\n    layout: {\n      padding: 0\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"planoFundo\",\n    style: {\n      backgroundColor: '#282c34',\n      padding: '0',\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '88%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: '#FFFFFF'\n        },\n        children: \"Evolu\\xE7\\xE3o do Pre\\xE7o do BTC Diante do FGI nos \\xDAltimos 30 Dias\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_c = ChartLineDouble;\nexport default ChartLineDouble;\nvar _c;\n$RefreshReg$(_c, \"ChartLineDouble\");","map":{"version":3,"names":["React","useEffect","useState","Line","getServiceFearAndGreed","getBitcoinPriceData","jsxDEV","_jsxDEV","dataFag","dataBtc","ChartLineDouble","bitcoinPrices","fearAndGreedIndex","labels","data","datasets","type","label","slice","borderColor","backgroundColor","yAxisID","fill","options","scales","x","ticks","color","grid","y1","position","beginAtZero","y2","drawOnChartArea","plugins","legend","layout","padding","id","style","width","display","justifyContent","alignItems","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/marcelocaixeta/Dev/Trade/bitcoin-app/src/FearAndGreedChartLine.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport getServiceFearAndGreed from './ServiceFearAndGreed';\nimport getBitcoinPriceData from './ServiceBitcoinPrice';\n\nconst dataFag = await getServiceFearAndGreed(30);\nconst dataBtc = await getBitcoinPriceData(30);\n\nconst ChartLineDouble = ({ bitcoinPrices, fearAndGreedIndex, labels }) => {\n\n  const data = {\n    labels: dataFag[1],\n    datasets: [\n      {\n        type: 'line',\n        label: 'Preço do Bitcoin (BTC)',\n        data: dataBtc.slice(-30), // Valores do preço do Bitcoin\n        borderColor: 'rgb(255, 215, 0)', // Cor amarela para o preço do Bitcoin\n        backgroundColor: 'rgba(255, 215, 0, 0.2)',\n        yAxisID: 'y1', // Associa este dataset ao eixo y1\n      },\n      {\n        type: 'line',\n        label: 'Fear and Greed Index (FGI)',\n        data: dataFag[0], // Valores do Fear and Greed Index\n        fill: false,\n        borderColor: 'rgb(54, 162, 235)', // Cor azul para o índice\n        yAxisID: 'y2', // Associa este dataset ao eixo y2\n      }\n    ]\n  };\n\n  const options = {\n    scales: {\n      x: {\n        ticks: { color: '#FFFFFF' }, // Cor do texto do eixo X\n        grid: { color: 'rgba(255, 255, 255, 0.2)' } // Cor da grade do eixo X\n      },\n      y1: {\n        type: 'linear',\n        position: 'left',\n        ticks: { color: '#FFD700' }, // Cor do texto do eixo Y1\n        grid: { color: 'rgba(255, 215, 0, 0.2)' }, // Cor da grade do eixo Y1\n        beginAtZero: false, // Para ajustar a escala ao valor mínimo do BTC\n      },\n      y2: {\n        type: 'linear',\n        position: 'right',\n        ticks: { color: '#36A2EB' }, // Cor do texto do eixo Y2\n        grid: { drawOnChartArea: false }, // Evita sobreposição de grids\n        beginAtZero: true, // Mantém o índice começando em 0\n      }\n    },\n    plugins: {\n      legend: {\n        labels: { color: '#FFFFFF' } // Cor do texto da legenda\n      }\n    },\n    layout: {\n      padding: 0\n    }\n  };\n\n  return (\n    <div id='planoFundo' style={{\n      backgroundColor: '#282c34',\n      padding: '0',\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }} >\n      <div style={{ width: '88%' }}>\n        <h2 style={{ color: '#FFFFFF' }}>Evolução do Preço do BTC Diante do FGI nos Últimos 30 Dias</h2>\n        <Line data={data} options={options} />\n      </div>\n    </div>\n  );\n};\n\nexport default ChartLineDouble;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}